Continuing.

Breakpoint 2, [33msyscall::kernel::syscall_handler[m ([36msyscall_id[m=..., [36margs[m=...) at [32msyscall/src/kernel/mod.rs[m:12
12	    match syscall_id {
13	        SyscallId::WRITE => sys_write(args[0], args[1] as *const u8, args[2]),
Continuing.

Breakpoint 1, [33mtrap::trap_handler[m ([36mcx[m=0x8020bef0 <SCHEDULE::config::KERNEL_STACK+7920>) at [32mtrap/src/lib.rs[m:34
34	    let scause = scause::read();
1: /x *cx = basic::TrapContext {x: [0x0, 0x8040083a, 0x8022ab80, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80404d20, 0x1, [m
    [m0x804004e6, 0x0, 0x0, 0x1, 0x40, 0x0, 0x8022ae88, [m
    [m0x0 <repeats 12 times>], sstatus: riscv::register::sstatus::Sstatus {bits: 0x200000000}, sepc: 0x8040089e}
Continuing.

Breakpoint 2, [33msyscall::kernel::syscall_handler[m ([36msyscall_id[m=..., [36margs[m=...) at [32msyscall/src/kernel/mod.rs[m:12
12	    match syscall_id {
Continuing.

Breakpoint 1, [33mtrap::trap_handler[m ([36mcx[m=0x8020bef0 <SCHEDULE::config::KERNEL_STACK+7920>) at [32mtrap/src/lib.rs[m:34
34	    let scause = scause::read();
1: /x *cx = basic::TrapContext {x: [0x0, 0x80400034, 0x8022afc0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x804004e6, 0x0, [m
    [m0x0, 0x1, 0x5d, 0x0 <repeats 14 times>], sstatus: riscv::register::sstatus::Sstatus {bits: 0x200000000}, sepc: 0x8040079e}
Continuing.

Breakpoint 2, [33msyscall::kernel::syscall_handler[m ([36msyscall_id[m=..., [36margs[m=...) at [32msyscall/src/kernel/mod.rs[m:12
12	    match syscall_id {
14	        SyscallId::EXIT => sys_exit(args[0] as i32),
Continuing.

Breakpoint 1, [33mtrap::trap_handler[m ([36mcx[m=0x8020def0 <SCHEDULE::config::KERNEL_STACK+16112>) at [32mtrap/src/lib.rs[m:34
34	    let scause = scause::read();
1: /x *cx = basic::TrapContext {x: [0x0, 0x804207cc, 0x8022bb50, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80424bf0, 0x43, [m
    [m0x80420478, 0x0, 0x0, 0x1, 0x40, 0x0, 0x8022be58, [m
    [m0x0 <repeats 12 times>], sstatus: riscv::register::sstatus::Sstatus {bits: 0x200000000}, sepc: 0x80420830}
Continuing.

Breakpoint 2, [33msyscall::kernel::syscall_handler[m ([36msyscall_id[m=..., [36margs[m=...) at [32msyscall/src/kernel/mod.rs[m:12
12	    match syscall_id {
Continuing.

Breakpoint 1, [33mtrap::trap_handler[m ([36mcx[m=0x8020def0 <SCHEDULE::config::KERNEL_STACK+16112>) at [32mtrap/src/lib.rs[m:34
34	    let scause = scause::read();
1: /x *cx = basic::TrapContext {x: [0x0, 0x804207cc, 0x8022bb50, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80424c48, 0x1, [m
    [m0x80420478, 0x0, 0x0, 0x1, 0x40, 0x0, 0x8022be58, [m
    [m0x0 <repeats 12 times>], sstatus: riscv::register::sstatus::Sstatus {bits: 0x200000000}, sepc: 0x80420830}
Continuing.

Breakpoint 2, [33msyscall::kernel::syscall_handler[m ([36msyscall_id[m=..., [36margs[m=...) at [32msyscall/src/kernel/mod.rs[m:12
12	    match syscall_id {
Continuing.

Breakpoint 1, [33mtrap::trap_handler[m ([36mcx[m=0x8020def0 <SCHEDULE::config::KERNEL_STACK+16112>) at [32mtrap/src/lib.rs[m:34
34	    let scause = scause::read();
1: /x *cx = basic::TrapContext {x: [0x0, 0x804207cc, 0x8022bb50, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80424c60, 0x24, [m
    [m0x80420478, 0x0, 0x0, 0x1, 0x40, 0x0, 0x8022be58, [m
    [m0x0 <repeats 12 times>], sstatus: riscv::register::sstatus::Sstatus {bits: 0x200000000}, sepc: 0x80420830}
Continuing.

Breakpoint 2, [33msyscall::kernel::syscall_handler[m ([36msyscall_id[m=..., [36margs[m=...) at [32msyscall/src/kernel/mod.rs[m:12
12	    match syscall_id {
Continuing.

Breakpoint 1, [33mtrap::trap_handler[m ([36mcx[m=0x8020def0 <SCHEDULE::config::KERNEL_STACK+16112>) at [32mtrap/src/lib.rs[m:34
34	    let scause = scause::read();
1: /x *cx = basic::TrapContext {x: [0x0, 0x804207cc, 0x8022bb50, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x80424c48, 0x1, [m
    [m0x80420478, 0x0, 0x0, 0x1, 0x40, 0x0, 0x8022be58, [m
    [m0x0 <repeats 12 times>], sstatus: riscv::register::sstatus::Sstatus {bits: 0x200000000}, sepc: 0x80420830}
Continuing.

Breakpoint 2, [33msyscall::kernel::syscall_handler[m ([36msyscall_id[m=..., [36margs[m=...) at [32msyscall/src/kernel/mod.rs[m:12
12	    match syscall_id {
Continuing.

Breakpoint 1, [33mtrap::trap_handler[m ([36mcx[m=0x8020def0 <SCHEDULE::config::KERNEL_STACK+16112>) at [32mtrap/src/lib.rs[m:34
34	    let scause = scause::read();
1: /x *cx = basic::TrapContext {x: [0x0, 0x80420106, 0x8022bee0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x80420478, 0x0, [m
    [m0x0, 0x1, 0x40, 0x0 <repeats 14 times>], sstatus: riscv::register::sstatus::Sstatus {bits: 0x200000000}, sepc: 0x80420122}
35	    let stval = stval::read();
1: /x *cx = basic::TrapContext {x: [0x0, 0x80420106, 0x8022bee0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x80420478, 0x0, [m
    [m0x0, 0x1, 0x40, 0x0 <repeats 14 times>], sstatus: riscv::register::sstatus::Sstatus {bits: 0x200000000}, sepc: 0x80420122}
37	    match scause.cause() {
1: /x *cx = basic::TrapContext {x: [0x0, 0x80420106, 0x8022bee0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1, 0x80420478, 0x0, [m
    [m0x0, 0x1, 0x40, 0x0 <repeats 14 times>], sstatus: riscv::register::sstatus::Sstatus {bits: 0x200000000}, sepc: 0x80420122}
44	            error!("[kernel] PageFault in application, core dumped.");
44	            error!("[kernel] PageFault in application, core dumped.");

Breakpoint 1, [33mtrap::trap_handler[m ([36mcx[m=0x8022bdd0 <SCHEDULE::config::USER_STACK+7632>) at [32mtrap/src/lib.rs[m:34
34	    let scause = scause::read();
35	    let stval = stval::read();
37	    match scause.cause() {
52	            error!("unsupported trap");
52	            error!("unsupported trap");

Breakpoint 1, [33mtrap::trap_handler[m ([36mcx[m=0x8020d940 <SCHEDULE::config::KERNEL_STACK+14656>) at [32mtrap/src/lib.rs[m:34
34	    let scause = scause::read();
35	    let stval = stval::read();
37	    match scause.cause() {
52	            error!("unsupported trap");
52	            error!("unsupported trap");

Breakpoint 1, [33mtrap::trap_handler[m ([36mcx[m=0x8022b820 <SCHEDULE::config::USER_STACK+6176>) at [32mtrap/src/lib.rs[m:34
34	    let scause = scause::read();
35	    let stval = stval::read();
37	    match scause.cause() {
52	            error!("unsupported trap");
52	            error!("unsupported trap");

Breakpoint 1, [33mtrap::trap_handler[m ([36mcx[m=0x8020d390 <SCHEDULE::config::KERNEL_STACK+13200>) at [32mtrap/src/lib.rs[m:34
34	    let scause = scause::read();
35	    let stval = stval::read();
37	    match scause.cause() {
52	            error!("unsupported trap");
52	            error!("unsupported trap");

Breakpoint 1, [33mtrap::trap_handler[m ([36mcx[m=0x8022b270 <SCHEDULE::config::USER_STACK+4720>) at [32mtrap/src/lib.rs[m:34
34	    let scause = scause::read();
35	    let stval = stval::read();
37	    match scause.cause() {
52	            error!("unsupported trap");
52	            error!("unsupported trap");

Breakpoint 1, [33mtrap::trap_handler[m ([36mcx[m=0x8020cde0 <SCHEDULE::config::KERNEL_STACK+11744>) at [32mtrap/src/lib.rs[m:34
34	    let scause = scause::read();
35	    let stval = stval::read();
37	    match scause.cause() {
52	            error!("unsupported trap");
52	            error!("unsupported trap");

Breakpoint 1, [33mtrap::trap_handler[m ([36mcx[m=0x8022acc0 <SCHEDULE::config::USER_STACK+3264>) at [32mtrap/src/lib.rs[m:34
34	    let scause = scause::read();
35	    let stval = stval::read();
37	    match scause.cause() {
52	            error!("unsupported trap");
52	            error!("unsupported trap");
Quit
Argument required (starting display address).
Argument required (starting display address).
Argument required (starting display address).
Argument required (starting display address).
Detaching from program: /home/jacky/os/Open-source-Operating-System-Boot-Camp-Phase-two/build-os-by-small-crates-jackyliu16/target/riscv64imac-unknown-none-elf/debug/ch3, process 1
Ending remote debugging.
[Inferior 1 (process 1) detached]
